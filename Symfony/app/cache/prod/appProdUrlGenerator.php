<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        'diabete_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'test' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DefaultController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addSubscriber' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addSubscriber',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editSubscriber' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editSubscriber',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editDiabeteProfileSubscriber' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::editDiabeteProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editDiabeteProfileSubscriber',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editDiabeteProfileDoctor' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::editDiabeteProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/editDiabeteProfileDoctor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addDoctor' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addDoctor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editDoctor' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editDoctor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'filesServicesDiabetes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\FilesController::ServiceDiabetesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/filesServicesDiabetes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subscriber' => array (  0 =>   array (    0 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::indexAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'text',      1 => '/subscriber',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'glycemie' => array (  0 =>   array (    0 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::glycemieAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'text',      1 => '/glycemie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'insuline' => array (  0 =>   array (    0 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::insulinAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'text',      1 => '/releveInsuline',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nutrition' => array (  0 =>   array (    0 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::nutritionAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'text',      1 => '/nutrition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'activite' => array (  0 =>   array (    0 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::activiteAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'text',      1 => '/activite',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addGlucometer' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\SubscriberController::addGlucometerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addGlucometer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctor' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/doctor/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctorGet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::indexGetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/doctor/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctorViewSubsriber' => array (  0 =>   array (    0 => 'id',    1 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::viewSubscriberAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/doctor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctorViewGlycemie' => array (  0 =>   array (    0 => 'id',    1 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::glycemieAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/glycemieSub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctorViewInsuline' => array (  0 =>   array (    0 => 'id',    1 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::insulinAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/insulineSub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctorViewNutrition' => array (  0 =>   array (    0 => 'id',    1 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::nutritionAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/nutritionSub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'doctorViewActivite' => array (  0 =>   array (    0 => 'id',    1 => 'nbDaysAgo',  ),  1 =>   array (    '_controller' => 'DiabeteBundle\\Controller\\DoctorController::activiteAction',    'nbDaysAgo' => 7,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nbDaysAgo',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/activiteSub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OCUserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OCUserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'OCUserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OCUserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
